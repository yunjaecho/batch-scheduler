# Server Properties
server.port=8080
server.compression.enabled=true
spring.application.name=JobScheduler

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.platform=org.hibernate.dialect.PostgreSQLDialet
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=joyunjae
spring.datasource.password=

spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#`hibernate_sequence' doesn't exist
#spring.jpa.hibernate.use-new-id-generator-mappings=false

## Hibernate Logging
logging.level.org.hibernate.SQL=DEBUG
# Initialize the datasource with available DDL and DML scripts
#spring.datasource.initialization-mode=always

#Quartz
spring.quartz.scheduler-name=QuartzScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.threadPool.threadCount=20
spring.quartz.properties.org.quartz.threadPool.threadNamePrefix=QuartzScheduler
spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.useProperties=true
spring.quartz.properties.org.quartz.jobStore.misfireThreshold=60000

#Log
spring.output.ansi.enabled=always
logging.level.root=DEBUG
logging.level.org.springframework=WARN
